# %%
lines = open("predbat.py", "r").readlines()

THIS_VERSION = "v7.11.14"
TIME_FORMAT = "%Y-%m-%dT%H:%M:%S%z"
TIME_FORMAT_SECONDS = "%Y-%m-%dT%H:%M:%S.%f%z"
TIME_FORMAT_OCTOPUS = "%Y-%m-%d %H:%M:%S%z"
TIME_FORMAT_SOLIS = "%Y-%m-%d %H:%M:%S"
PREDICT_STEP = 5
RUN_EVERY = 5

# 240v x 100 amps x 3 phases / 1000 to kw / 60 minutes in an hour is the maximum kWh in a 1 minute period
MAX_INCREMENT = 240 * 100 * 3 / 1000 / 60

SIMULATE = False  # Debug option, when set don't write to entities but simulate each 30 min period
SIMULATE_LENGTH = 23 * 60  # How many periods to simulate, set to 0 for just current
INVERTER_TEST = False  # Run inverter control self test

"""
Create an array of times
"""
OPTIONS_TIME = []

CONFIG_GROUPS = {
    "Eco7 | No Export": {},
    "Eco 7 | Octopus Export": {
        "calculate_best_discharge": True,
        "calculate_discharge_first": True,
        "combine_charge_slots": True,
        "combine_discharge_slots": False,
        "set_discharge_window": True,
        "metric_min_improvement": 0,
        "metric_min_improvement_discharge": 0,
        "rate_high_threshold": 0,
        "set_discharge_freeze": True,
        "set_charge_freeze": False,
        "calculate_max_windows": 96,
        "predbat_metric_battery_cycle": 3,
    },
    "Octopus Flux / Cozy": {
        "calculate_best_discharge": True,
        "calculate_discharge_first": True,
        "combine_charge_slots": True,
        "combine_discharge_slots": True,
        "set_discharge_window": True,
        "metric_min_improvement": 0,
        "metric_min_improvement_discharge": 0.1,
        "rate_low_threshold": 0.8,
        "rate_high_threshold": 1.2,
        "metric_battery_cycle": 2,
        "set_discharge_freeze": True,
        "set_charge_freeze": True,
    },
    "Octopus Agile": {
        "calculate_best_discharge": True,
        "calculate_discharge_first": True,
        "combine_discharge_slots": False,
        "set_discharge_window": True,
        "metric_min_improvement": 0,
        "metric_min_improvement_discharge": 0.1,
        "rate_low_threshold": 0,
        "rate_high_threshold": 0,
        "metric_battery_cycle": 2,
        "calculate_,ax_windows": 32,
        "set_discharge_freeze": True,
        "set_charge_freeze": True,
        "forecast_plan_hours": 48,
    },
}


CONFIG_ITEMS = [
    {
        "name": "version",
        "friendly_name": "Predbat Core Update",
        "type": "update",
        "title": "Predbat",
        "installed_version": THIS_VERSION,
        "release_url": "https://github.com/springfall2008/batpred/releases/tag/" + THIS_VERSION,
        "entity_picture": "https://user-images.githubusercontent.com/48591903/249456079-e98a0720-d2cf-4b71-94ab-97fe09b3cee1.png",
        "default": THIS_VERSION,
    },
    {
        "name": "pv_metric10_weight",
        "friendly_name": "Metric 10 Weight",
        "type": "input_number",
        "min": 0,
        "max": 1.0,
        "step": 0.01,
        "unit": "fraction",
        "icon": "mdi:percent",
        "default": 0.15,
    },
    {
        "name": "pv_scaling",
        "friendly_name": "PV Scaling",
        "type": "input_number",
        "min": 0,
        "max": 2.0,
        "step": 0.01,
        "unit": "multiple",
        "icon": "mdi:multiplication",
        "default": 1.0,
    },
    {
        "name": "load_scaling",
        "friendly_name": "Load Scaling",
        "type": "input_number",
        "min": 0,
        "max": 2.0,
        "step": 0.01,
        "unit": "multiple",
        "icon": "mdi:multiplication",
        "default": 1.0,
    },
    {
        "name": "battery_rate_max_scaling",
        "friendly_name": "Battery rate max scaling",
        "type": "input_number",
        "min": 0,
        "max": 1.0,
        "step": 0.01,
        "unit": "multiple",
        "icon": "mdi:multiplication",
        "default": 1.0,
    },
    {
        "name": "battery_loss",
        "friendly_name": "Battery loss charge ",
        "type": "input_number",
        "min": 0,
        "max": 1.0,
        "step": 0.01,
        "unit": "fraction",
        "icon": "mdi:call-split",
        "default": 0.03,
    },
    {
        "name": "battery_loss_discharge",
        "friendly_name": "Battery loss discharge",
        "type": "input_number",
        "min": 0,
        "max": 1.0,
        "step": 0.01,
        "unit": "fraction",
        "icon": "mdi:call-split",
        "default": 0.03,
    },
    {
        "name": "inverter_loss",
        "friendly_name": "Inverter Loss",
        "type": "input_number",
        "min": 0,
        "max": 1.0,
        "step": 0.01,
        "unit": "fraction",
        "icon": "mdi:call-split",
        "default": 0.04,
    },
    {"name": "inverter_hybrid", "friendly_name": "Inverter Hybrid", "type": "switch", "default": True},
    {"name": "inverter_soc_reset", "friendly_name": "Inverter SOC Reset", "type": "switch", "default": False},
    {"name": "battery_capacity_nominal", "friendly_name": "Use the Battery Capacity Nominal size", "type": "switch", "default": False},
    {
        "name": "car_charging_energy_scale",
        "friendly_name": "Car charging energy scale",
        "type": "input_number",
        "min": 0,
        "max": 1.0,
        "step": 0.01,
        "unit": "fraction",
        "icon": "mdi:multiplication",
        "default": 1.0,
    },
    {
        "name": "car_charging_threshold",
        "friendly_name": "Car charging threshold",
        "type": "input_number",
        "min": 4,
        "max": 8.5,
        "step": 0.10,
        "unit": "kw",
        "icon": "mdi:ev-station",
        "default": 6.0,
    },
    {
        "name": "car_charging_rate",
        "friendly_name": "Car charging rate",
        "type": "input_number",
        "min": 1,
        "max": 8.5,
        "step": 0.10,
        "unit": "kw",
        "icon": "mdi:ev-station",
        "default": 7.4,
    },
    {
        "name": "car_charging_loss",
        "friendly_name": "Car charging loss",
        "type": "input_number",
        "min": 0,
        "max": 1.0,
        "step": 0.01,
        "unit": "fraction",
        "icon": "mdi:call-split",
        "default": 0.08,
    },
    {
        "name": "best_soc_margin",
        "friendly_name": "Best SOC Margin",
        "type": "input_number",
        "min": 0,
        "max": 30.0,
        "step": 0.10,
        "unit": "kwh",
        "icon": "mdi:battery-50",
        "default": 0.0,
    },
    {"name": "best_soc_min", "friendly_name": "Best SOC Min", "type": "input_number", "min": 0, "max": 30.0, "step": 0.10, "unit": "kwh", "icon": "mdi:battery-50", "default": 0.0},
    {"name": "best_soc_max", "friendly_name": "Best SOC Max", "type": "input_number", "min": 0, "max": 30.0, "step": 0.10, "unit": "kwh", "icon": "mdi:battery-50", "default": 0.0},
    {
        "name": "best_soc_keep",
        "friendly_name": "Best SOC Keep",
        "type": "input_number",
        "min": 0,
        "max": 30.0,
        "step": 0.10,
        "unit": "kwh",
        "icon": "mdi:battery-50",
        "default": 2.0,
    },
    {
        "name": "best_soc_step",
        "friendly_name": "Best SOC Step",
        "type": "input_number",
        "min": 0.1,
        "max": 1.0,
        "step": 0.05,
        "unit": "kwh",
        "icon": "mdi:battery-50",
        "default": 0.25,
    },
    {
        "name": "metric_min_improvement",
        "friendly_name": "Metric Min Improvement",
        "type": "input_number",
        "min": -50,
        "max": 50.0,
        "step": 0.1,
        "unit": "p",
        "icon": "mdi:currency-usd",
        "default": 0.0,
    },
    {
        "name": "metric_min_improvement_discharge",
        "friendly_name": "Metric Min Improvement Discharge",
        "type": "input_number",
        "min": -50,
        "max": 50.0,
        "step": 0.1,
        "unit": "p",
        "icon": "mdi:currency-usd",
        "default": 0.1,
    },
    {
        "name": "metric_battery_cycle",
        "friendly_name": "Metric Battery Cycle Cost",
        "type": "input_number",
        "min": -50,
        "max": 50.0,
        "step": 0.1,
        "unit": "p/kwh",
        "icon": "mdi:currency-usd",
        "default": 0.03,
    },
    {
        "name": "metric_future_rate_offset_import",
        "friendly_name": "Metric Future Rate Offset Import",
        "type": "input_number",
        "min": -50,
        "max": 50.0,
        "step": 0.1,
        "unit": "p/kwh",
        "icon": "mdi:currency-usd",
        "default": 0.0,
    },
    {
        "name": "metric_future_rate_offset_export",
        "friendly_name": "Metric Future Rate Offset Export",
        "type": "input_number",
        "min": -50,
        "max": 50.0,
        "step": 0.1,
        "unit": "p/kwh",
        "icon": "mdi:currency-usd",
        "default": 0.0,
    },
    {
        "name": "metric_inday_adjust_damping",
        "friendly_name": "In-day adjustment damping factor",
        "type": "input_number",
        "min": 0.5,
        "max": 2.0,
        "step": 0.05,
        "unit": "fraction",
        "icon": "mdi:call-split",
        "default": 1.0,
    },
    {
        "name": "metric_octopus_saving_rate",
        "friendly_name": "Octopus Saving session assumed rate",
        "type": "input_number",
        "min": 1,
        "max": 500,
        "step": 5,
        "unit": "fraction",
        "icon": "mdi:currency-usd",
        "default": 25,
    },
    {"name": "metric_cloud_enable", "friendly_name": "Simulate clouds (beta)", "type": "switch", "default": False},
    {
        "name": "set_window_minutes",
        "friendly_name": "Set Window Minutes",
        "type": "input_number",
        "min": 5,
        "max": 720,
        "step": 5,
        "unit": "minutes",
        "icon": "mdi:timer-settings-outline",
        "default": 30,
    },
    {
        "name": "set_soc_minutes",
        "friendly_name": "Set SOC Minutes",
        "type": "input_number",
        "min": 5,
        "max": 720,
        "step": 5,
        "unit": "minutes",
        "icon": "mdi:timer-settings-outline",
        "default": 30,
    },
    {"name": "set_reserve_min", "friendly_name": "Set Reserve Min", "type": "input_number", "min": 4, "max": 100, "step": 1, "unit": "%", "icon": "mdi:percent", "default": 4},
    {
        "name": "rate_low_threshold",
        "friendly_name": "Rate Low Threshold",
        "type": "input_number",
        "min": 0.00,
        "max": 2.00,
        "step": 0.05,
        "unit": "multiple",
        "icon": "mdi:multiplication",
        "default": 0.8,
    },
    {
        "name": "rate_high_threshold",
        "friendly_name": "Rate High Threshold",
        "type": "input_number",
        "min": 0.00,
        "max": 2.00,
        "step": 0.05,
        "unit": "multiple",
        "icon": "mdi:multiplication",
        "default": 0.0,
    },
    {"name": "car_charging_hold", "friendly_name": "Car charging hold", "type": "switch", "default": True},
    {"name": "octopus_intelligent_charging", "friendly_name": "Octopus Intelligent Charging", "type": "switch", "default": False},
    {"name": "car_charging_plan_smart", "friendly_name": "Car Charging Plan Smart", "type": "switch", "default": False},
    {"name": "car_charging_from_battery", "friendly_name": "Allow car to charge from battery", "type": "switch", "default": False},
    {"name": "calculate_best", "friendly_name": "Calculate Best", "type": "switch", "default": True},
    {"name": "calculate_best_charge", "friendly_name": "Calculate Best Charge", "type": "switch", "default": True},
    {"name": "calculate_best_discharge", "friendly_name": "Calculate Best Discharge", "type": "switch", "default": False},
    {"name": "calculate_discharge_first", "friendly_name": "Calculate Discharge First", "type": "switch", "default": False},
    {"name": "calculate_discharge_oncharge", "friendly_name": "Calculate Discharge on charge slots", "type": "switch", "default": True},
    {"name": "calculate_second_pass", "friendly_name": "Calculate second pass (slower)", "type": "switch", "default": False},
    {"name": "calculate_inday_adjustment", "friendly_name": "Calculate in-day adjustment", "type": "switch", "default": False},
    {
        "name": "calculate_max_windows",
        "friendly_name": "Max charge/discharge windows",
        "type": "input_number",
        "min": 8,
        "max": 128,
        "step": 8,
        "icon": "mdi:vector-arrange-above",
        "default": 48,
    },
    {
        "name": "forecast_plan_hours",
        "friendly_name": "Forecast Plan Hours",
        "type": "input_number",
        "min": 8,
        "max": 48,
        "step": 4,
        "icon": "mdi:clock",
        "default": 24.0,
    },
    {
        "name": "calculate_plan_every",
        "friendly_name": "Calculate plan every N minutes",
        "type": "input_number",
        "min": 5,
        "max": 60,
        "step": 5,
        "unit": "kwh",
        "icon": "mdi:clock-end",
        "default": 5,
    },
    {"name": "combine_charge_slots", "friendly_name": "Combine Charge Slots", "type": "switch", "default": True},
    {"name": "combine_discharge_slots", "friendly_name": "Combine Discharge Slots", "type": "switch", "default": False},
    {"name": "combine_mixed_rates", "friendly_name": "Combined Mixed Rates", "type": "switch", "default": False},
    {"name": "set_charge_window", "friendly_name": "Set Charge Window", "type": "switch", "default": True},
    {"name": "set_charge_freeze", "friendly_name": "Set Charge Freeze", "type": "switch", "default": True},
    {"name": "set_window_notify", "friendly_name": "Set Window Notify", "type": "switch", "default": False},
    {"name": "set_status_notify", "friendly_name": "Set Status Notify", "type": "switch", "default": False},
    {"name": "set_discharge_window", "friendly_name": "Set Discharge Window", "type": "switch", "default": False},
    {"name": "set_discharge_freeze", "friendly_name": "Set Discharge Freeze", "type": "switch", "default": False},
    {"name": "set_discharge_freeze_only", "friendly_name": "Set Discharge Freeze Only", "type": "switch", "default": False},
    {"name": "set_discharge_notify", "friendly_name": "Set Discharge Notify", "type": "switch", "default": False},
    {"name": "set_discharge_during_charge", "friendly_name": "Set Discharge During Charge", "type": "switch", "default": True},
    {"name": "set_soc_enable", "friendly_name": "Set Soc Enable", "type": "switch", "default": True},
    {"name": "set_soc_notify", "friendly_name": "Set Soc Notify", "type": "switch", "default": False},
    {"name": "set_reserve_enable", "friendly_name": "Set Reserve Enable", "type": "switch", "default": True},
    {"name": "set_reserve_hold", "friendly_name": "Set Reserve Hold", "type": "switch", "default": True},
    {"name": "set_reserve_notify", "friendly_name": "Set Reserve Notify", "type": "switch", "default": False},
    {"name": "set_read_only", "friendly_name": "Read Only mode", "type": "switch", "default": False},
    {"name": "balance_inverters_enable", "friendly_name": "Balance Inverters Enable (Beta)", "type": "switch", "default": False},
    {"name": "balance_inverters_charge", "friendly_name": "Balance Inverters for charging", "type": "switch", "default": True},
    {"name": "balance_inverters_discharge", "friendly_name": "Balance Inverters for discharge", "type": "switch", "default": True},
    {"name": "balance_inverters_crosscharge", "friendly_name": "Balance Inverters for cross-charging", "type": "switch", "default": True},
    {
        "name": "balance_inverters_threshold_charge",
        "friendly_name": "Balance Inverters threshold charge",
        "type": "input_number",
        "min": 1,
        "max": 20,
        "step": 1,
        "unit": "%",
        "icon": "mdi:percent",
        "default": 1,
    },
    {
        "name": "balance_inverters_threshold_discharge",
        "friendly_name": "Balance Inverters threshold discharge",
        "type": "input_number",
        "min": 1,
        "max": 20,
        "step": 1,
        "unit": "%",
        "icon": "mdi:percent",
        "default": 1,
    },
    {"name": "debug_enable", "friendly_name": "Debug Enable", "type": "switch", "icon": "mdi:bug-outline", "default": False},
    {
        "name": "car_charging_plan_time",
        "friendly_name": "Car charging planned ready time",
        "type": "select",
        "options": OPTIONS_TIME,
        "icon": "mdi:clock-end",
        "default": "07:00:00",
    },
    {"name": "rate_low_match_export", "friendly_name": "Rate Low Match Export", "type": "switch", "default": False},
    {"name": "load_filter_modal", "friendly_name": "Apply modal filter historical load", "type": "switch", "default": False},
    {"name": "iboost_enable", "friendly_name": "IBoost enable", "type": "switch", "default": False},
    {"name": "iboost_max_energy", "friendly_name": "IBoost max energy", "type": "input_number", "min": 0, "max": 5, "step": 0.1, "unit": "kwh", "default": 3},
    {"name": "iboost_today", "friendly_name": "IBoost today", "type": "input_number", "min": 0, "max": 5, "step": 0.1, "unit": "kwh", "default": 0},
    {"name": "iboost_max_power", "friendly_name": "IBoost max power", "type": "input_number", "min": 0, "max": 3500, "step": 100, "unit": "w", "default": 2400},
    {"name": "iboost_min_power", "friendly_name": "IBoost min power", "type": "input_number", "min": 0, "max": 3500, "step": 100, "unit": "w", "default": 500},
    {"name": "iboost_min_soc", "friendly_name": "IBoost min soc", "type": "input_number", "min": 0, "max": 100, "step": 5, "unit": "%", "icon": "mdi:percent", "default": 0},
    {
        "name": "holiday_days_left",
        "friendly_name": "Holiday days left",
        "type": "input_number",
        "min": 0,
        "max": 28,
        "step": 1,
        "unit": "days",
        "icon": "mdi:clock-end",
        "default": 0,
    },
    {
        "name": "config_grouping",
        "friendly_name": "PredBat Config Group",
        "type": "select",
        "options": list(CONFIG_GROUPS.keys()),
        "icon": "mdi:list-box-outline",
        "default": list(CONFIG_GROUPS.keys())[0],
    },
]


"""
GE Inverters are the default but not all inverters have the same parameters so this constant
maps the parameters that are different between brands.

The approach is to attempt to mimic the GE model with dummy entities in HA so that predbat GE
code can be used with minimal modification.
"""


edits = []
old_lines = lines.copy()
new_lines = []
y = {i["name"]: i for i in CONFIG_ITEMS}
z = []

for i, line in enumerate(lines[8282:8438]):
    if "self." in line:
        x = line.split("self.")[1].split(" =")
        if len(x) > 1:
            if x[0] in y:
                z.append((y[x[0]]))
                print(f"\t{y[x[0]]},")

v = [i for i in CONFIG_ITEMS if i["name"] not in [j["name"] for j in z]]
for w in v:
    print(f"\t{w},")
# %%
with open("test.py", "w") as file_out:
    # Writing data to a file
    file_out.writelines(lines)

# %%
